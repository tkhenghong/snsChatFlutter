def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'

// Deploy Android with Flutter
// https://flutter.dev/docs/deployment/android

// Read configuration file for Debug mode
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

// Read configuration file for Profile mode
def profileKeystoreProperties = new Properties()
def profileKeystorePropertiesFile = rootProject.file('key.profile.properties')
if (profileKeystorePropertiesFile.exists()) {
    profileKeystoreProperties.load(new FileInputStream(profileKeystorePropertiesFile))
}

// Read configuration file for Release mode
def releaseKeystoreProperties = new Properties()
def releaseKeystorePropertiesFile = rootProject.file('key.release.properties')
if (releaseKeystorePropertiesFile.exists()) {
    releaseKeystoreProperties.load(new FileInputStream(releaseKeystorePropertiesFile))
}

android {
    compileSdkVersion 29

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.awpghost.pocketchat"
        minSdkVersion 21 // Android 5 Lollipop (to Support TLS 1.2)
        targetSdkVersion 29 // Android 10 Q
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    // TODO: Rename APK when build -> https://github.com/flutter/flutter/issues/29509
    // Flutter launcher icon plugin integration code
    flavorDimensions "default"
    productFlavors {
        production {
            dimension "default"
            applicationIdSuffix ""
            manifestPlaceholders = [appName: "PocketChat"]
        }
        development {
            dimension "default"
            // Allow during development environment, add .dev at the back of your app ID.
            // This is important if you have your app ID bind to some Google services(Firebase), it may fail due to you didn't create com.awpghost.pocketchat.int in Firebase.
            applicationIdSuffix ".dev"
        }
        integration {
            dimension "default"
            // Allow during development environment, add .dev at the back of your app ID.
            // This is important if you have your app ID bind to some Google services(Firebase), it may fail due to you didn't create com.awpghost.pocketchat.int in Firebase.
            applicationIdSuffix ".uat"
        }
    }

    // Deploy Android with Flutter
    // https://flutter.dev/docs/deployment/android
    // Signing configurations for each development mode.
    signingConfigs {
        // Sign with the provided sign key in debug mode
        // TODO: If you need custom signing key for debug, uncomment the code below.
        // debug {
        //     keyAlias keystoreProperties['keyAlias']
        //     keyPassword keystoreProperties['keyPassword']
        //     storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
        //     storePassword keystoreProperties['storePassword']
        // }

        // Sign with the provided sign key in profile mode
        profile {
            keyAlias profileKeystoreProperties['keyAlias']
            keyPassword profileKeystoreProperties['keyPassword']
            storeFile profileKeystoreProperties['storeFile'] ? file(profileKeystoreProperties['storeFile']) : null
            storePassword profileKeystoreProperties['storePassword']
        }

        // Sign with the provided sign key in release mode
        release {
            keyAlias releaseKeystoreProperties['keyAlias']
            keyPassword releaseKeystoreProperties['keyPassword']
            storeFile releaseKeystoreProperties['storeFile'] ? file(releaseKeystoreProperties['storeFile']) : null
            storePassword releaseKeystoreProperties['storePassword']
        }
    }

    // Using which signing config for each type of deployment.
    buildTypes {
        debug {
            // Signing with the debug keys, so `flutter run` works.
            signingConfig signingConfigs.debug
        }

        profile {
            // flutter run --profile
            // TODO: Uncomment the code below if you have signing key located in the correctly in the directory.
            // signingConfig signingConfigs.profile
            signingConfig signingConfigs.debug
        }

        release {
            // flutter run --release
            // TODO: Uncomment the code below if you have signing key located in the correctly in the directory.
//             signingConfig signingConfigs.release
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:26.2.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-messaging:21.0.0'
    implementation 'com.google.firebase:firebase-storage:19.2.0'
    implementation 'com.google.android.gms:play-services-basement:17.5.0'
}
